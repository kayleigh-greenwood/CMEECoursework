LowerRSS[i] <- "Logistic"
}
AICResults <- c(AIC(cubicmodel), AIC(logisticmodel))
AICDiff[i] <- abs(diff(AICResults))
if (AICDiff[i]>=2){
SignifAIC[i] <- TRUE
} else {
SignifAIC[i] <- FALSE
}
if (which.min(AICResults)==1){
LowerAIC[i] <- "Cubic"
}
if (which.min(AICResults)==2){
LowerAIC[i] <- "Logistic"
}
},
error = function(e){
message("Caught an error for subset:", i)
print(e)
},
warning = function(w){
message("Caught a warning for subset:", i)
print(w)
},
finally = {
# graphics.off()
message('All done, quitting.')
}
)
}
AICResults <- c(AIC(cubicmodel), AIC(logisticmodel))
AIC(cubicmodel)
AIC(logisticmodel)
c(AIC(cubicmodel), AIC(logisticmodel))
source("ModelFitting.R")
View(subset1)
View(subset1)
rm(list=ls())
source("DataPrep.R")
source("ModelFitting.R")
View(MyData)
View(AnalysisDF)
nlevels(MyData$ID)
for (i in 1:nlevels(MyData$ID)){
## subset
subset1 <- subset(MyData,ID== i)
subset1 <- subset1[order(subset1$Time),]
## models
tryCatch(
expr = {
########## CREATE MODELS ############
# create cubic model
cubicmodel <- lm(log(subset1$PopBio) ~ subset1$Time + I(subset1$Time^2) +I(subset1$Time^3))
# create logistic model
logistic1 <- function(t, r, K, N0){
N0 * K * exp(r * t)/(K+N0 * (exp(r * t)-1))
}
logisticmodel <- nlsLM(log(subset1$PopBio)~logistic1(subset1$Time, r, K, N0), start=list(K=1, r=0.1, N0=0.1), data=subset1)
######### FIT MODELS ###########
# open pdf
pdf(paste("../Plots/PlotCubicID", i, ".pdf", sep=""))
# plot data points
# par(fig=c(0,1,0.1,1))
plot(log(subset1$PopBio) ~ subset1$Time, xlab = "Time (Hours)", ylab = "log(Abundance)")
########## CUBIC MODEL ############
# CUBIC MODEL: get predicted values for model and input them into variable
PredictedCubic <- predict(cubicmodel, data.frame(x=subset1$Time), interval='confidence', level=0.99)
# CUBIC MODEL: use the first column of the variable to plot the model
lines(subset1$Time, PredictedCubic[,1], col=2, lwd=2)
########## LOGISTIC MODEL ##########
# LOGISTIC MODEL: get predicted values for model and input them into variable
PredictedLogistic <- predict(logisticmodel, data.frame(x=subset1$Time))
# # LOGISTIC MODEL: use the first column of the variable to plot the model
lines(subset1$Time, PredictedLogistic, col=3, lwd=2)
legend("bottomright", legend = c("Cubic Polynomial", "Logistic"), lwd=2, lty=1, col=2:3)
# close pdf
dev.off()
message("Successfully executed the model for subset:", i)
ID[i] <- i
# save ID to ID variable
#### statistical measures of model fit ####
RSS_Cubic[i] <- sum(residuals(cubicmodel)^2)
RSS_Logistic[i] <- sum(residuals(logisticmodel)^2)
RSSResults <- c(RSS_Cubic, RSS_Logistic)
if (which.min(RSSResults)==1){
LowerRSS[i] <- "Cubic"
}
if (which.min(RSSResults)==2){
LowerRSS[i] <- "Logistic"
}
AICResults <- c(AIC(cubicmodel), AIC(logisticmodel))
AICDiff[i] <- abs(diff(AICResults))
if (AICDiff[i]>=2){
SignifAIC[i] <- TRUE
} else {
SignifAIC[i] <- FALSE
}
if (which.min(AICResults)==1){
LowerAIC[i] <- "Cubic"
}
if (which.min(AICResults)==2){
LowerAIC[i] <- "Logistic"
}
},
error = function(e){
message("Caught an error for subset:", i)
print(e)
},
warning = function(w){
message("Caught a warning for subset:", i)
print(w)
},
finally = {
# graphics.off()
message('All done, quitting.')
}
)
}
ID
AICDiff
AnalysisDF <- data.frame(ID, LowerAIC, AICDiff, SignifAIC, RSS_Cubic, RSS_Logistic, LowerRSS)
AnalysisDF <- na.omit(AnalysisDF)
AnalysisDF <- data.frame(ID, LowerAIC, AICDiff, SignifAIC, RSS_Cubic, RSS_Logistic, LowerRSS)
View(AnalysisDF)
source("ModelFitting.R")
source("ModelFitting.R")
source("ModelFitting.R")
RSS_Cubic[1] <- sum(residuals(cubicmodel)^2)
rm(list=ls())
source("DataPrep.R")
source("ModelFitting.R")
View(AnalysisDF)
AnalysisDF <- read.csv("../results/Analysis.csv")
rm(list=ls())
AnalysisDF <- read.csv("../results/Analysis.csv")
View(AnalysisDF)
AICSubset <- data.frame(AnalysisDF$LowerAIC, AnalysisDF$SignifAIC)
View(AICSubset)
SampleSize <- dim(AnalysisDF)
SampleSize <- dim(AnalysisDF)[1]
SampleSize <- dim(AnalysisDF)[1]
rm(list=ls())
AnalysisDF <- read.csv("../results/Analysis.csv")
AICSubset <- data.frame(AnalysisDF$LowerAIC, AnalysisDF$SignifAIC)
SampleSize <- dim(AnalysisDF)[1]
AICSubsetSignif <- subset(AICSubset, SignifAIC==TRUE)
## AIC analysis ##
AICSubset <- data.frame(AnalysisDF$LowerAIC, AnalysisDF$SignifAIC)
AICSubsetSignif <- subset(AICSubset, SignifAIC==TRUE)
AICSubsetSignif <- subset(AICSubset,SignifAIC==TRUE)
View(AICSubset)
AICSubsetSignif <- subset(AICSubset,AnalysisDF$SignifAIC==TRUE)
View(AICSubsetSignif)
summary(AICSubsetSignif)
x <- summary(AICSubsetSignif)
x <- summary(AICSubsetSignif)[1]
x <- summary(AICSubsetSignif)[1,1]
x <- summary(AICSubsetSignif)[1,1]
x <- summary(AICSubsetSignif)[1[1]]
AICCubicBest <-summary(AICSubsetSignif)[1]
AICSubsetTrue <- subset(AICSubset,AnalysisDF$SignifAIC==TRUE)
AICCubicBest <- countif(AICSubsetTrue$AnalysisDF.LowerAIC=="Cubic")
AICStats <- count(AICSubsetTrue)
View(AICStats)
AICStats <- count(AICSubsetTrue, vars="Cubic")
View(AICStats)
View(AICSubsetTrue)
count(AnalysisDF$SignifAIC==TRUE)
## imports ##
require(dplyr)
tally(AnalysisDF$SignifAIC==TRUE)
tally(AnalysisDF$SignifAIC)
tally(AnalysisDF$SignifAIC)
summary(AnalysisDF$SignifAIC)
summary(AICSubset$AnalysisDF.SignifAIC)
AICSubsetTrue <- subset(AICSubset,AnalysisDF$SignifAIC==TRUE)
View(AICSubset)
AICSubsetTrue <- AICSubset[which(AICSubset$AnalysisDF.SignifAIC==TRUE)]
View(AICStats)
View(AnalysisDF)
## AIC analysis ##
sum(AnalysisDF['LowerAIC']=='Cubic' & AnalysisDF['SignifAIC']==TRUE)
## AIC analysis ##
CubicBest=(sum(AnalysisDF['LowerAIC']=='Cubic' & AnalysisDF['SignifAIC']==TRUE))/SampleSize
LogisticBest=(sum(AnalysisDF['LowerAIC']=='Logistic' & AnalysisDF['SignifAIC']==TRUE))/SampleSize
NoBest=(sum(AnalysisDF['SignifAIC']==FALSE))/SampleSize
## AIC analysis ##
%CubicBest=((sum(AnalysisDF['LowerAIC']=='Cubic' & AnalysisDF['SignifAIC']==TRUE))/SampleSize)*100
## AIC analysis ##
CubicBest=((sum(AnalysisDF['LowerAIC']=='Cubic' & AnalysisDF['SignifAIC']==TRUE))/SampleSize)*100
NoBest=((sum(AnalysisDF['SignifAIC']==FALSE))/SampleSize)*100
## AIC analysis ##
CubicAICBest=((sum(AnalysisDF['LowerAIC']=='Cubic' & AnalysisDF['SignifAIC']==TRUE))/SampleSize)*100
LogisticAICBest=((sum(AnalysisDF['LowerAIC']=='Logistic' & AnalysisDF['SignifAIC']==TRUE))/SampleSize)*100
NoAICBest=((sum(AnalysisDF['SignifAIC']==FALSE))/SampleSize)*100
CubicRSSBest=(sum(AnalysisDF['LowerRSS']=='Cubic')/SampleSize)*100
LogisticRSSBest=(sum(AnalysisDF['LowerRSS']=='Logistic')/SampleSize)*100
AICBest <- c(CubicAICBest, LogisticAICBest, NoAICBest)
RSSBest <- c(CubicAICBest, LogisticAICBest)
## AnalysisPlot ##
Analysis <- data.frame(AICBest, RSSBest)
RSSBest <- c(CubicAICBest, LogisticAICBest, NoRSSBest)
NoRSSBest=sum(AnalysisDF['LowerRSS']=='None')
RSSBest <- c(CubicAICBest, LogisticAICBest, NoRSSBest)
## AnalysisPlot ##
Analysis <- data.frame(AICBest, RSSBest)
View(Analysis)
rownames(Analysis) <- c("Cubic", "Logistic", "None")
View(Analysis)
ggplot(Analysis, aes(x=Statistical Analysis, y=value)) +
geom_bar(position="fill")
source("PlotandAnalyse.R")
ggplot(Analysis, aes(x="Statistical Analysis", y="value")) +
geom_bar(position="fill")
View(Analysis)
## imports ##
require(ggplot2)
ggplot(Analysis, aes(x="Statistical Analysis", y="value")) +
geom_bar(position="fill")
ggplot(Analysis, aes(x="Statistical Analysis", y="value")) +
geom_bar(stat="Identity", position="fill")
ggplot(Analysis, aes(x="Statistical Analysis", y="value")) +
geom_bar(stat="Identity")
ggplot(Analysis) +
geom_bar(stat="Identity")
View(Analysis)
## AICChart ##
Percentage <- c("Cubic", "Logistic", "None")
AICAnalysis <- data.frame(AICBest, Percentage)
View(AICAnalysis)
ggplot(AICAnalysis, aes(x=Percentage, y=AICBest)) +
geom_bar(stat="Identity")
View(AICAnalysis)
ggplot(AICAnalysis, aes(x=Percentage, y=AICBest)) +
geom_bar(stat="Identity", position="fill")
Analysis <- data.frame(Percentage, AICBest, RSSBest)
RSSBest <- c(CubicRSSBest, LogisticRSSBest, NoRSSBest)
## Chart ##
Percentage <- c("Cubic", "Logistic", "None")
Analysis <- data.frame(Percentage, AICBest, RSSBest)
ggplot(Analysis, aes(x=Percentage, y=AICBest)) +
geom_bar(stat="Identity", position="fill")
require(ggplot2)
## import data ##
AnalysisDF <- read.csv("../results/Analysis.csv")
## metaanalysis ##
SampleSize <- dim(AnalysisDF)[1]
## AIC analysis ##
CubicAICBest=sum(AnalysisDF['LowerAIC']=='Cubic' & AnalysisDF['SignifAIC']==TRUE)
LogisticAICBest=sum(AnalysisDF['LowerAIC']=='Logistic' & AnalysisDF['SignifAIC']==TRUE)
NoAICBest=sum(AnalysisDF['SignifAIC']==FALSE)
AIC <- c(CubicAICBest, LogisticAICBest, NoAICBest)
## RSS analysis ##
CubicRSSBest=sum(AnalysisDF['LowerRSS']=='Cubic')
LogisticRSSBest=sum(AnalysisDF['LowerRSS']=='Logistic')
NoRSSBest=sum(AnalysisDF['LowerRSS']=='None')
RSS <- c(CubicRSSBest, LogisticRSSBest, NoRSSBest)
## Chart ##
Best <- c("Cubic", "Logistic", "None")
Analysis <- data.frame(Percentage, AIC, RSS)
View(Analysis)
ggplot(Analysis, aes(x=Best, y=Plots)) +
geom_bar(stat="Identity", position="fill")
View(Analysis)
Analysis <- data.frame(Best, AIC, RSS)
ggplot(Analysis, aes(x=Best, y=AIC)) +
geom_bar(stat="Identity", position="fill")
geom_bar(stat="Identity")
ggplot(Analysis, aes(x=Best, y=AIC)) +
geom_bar(stat="Identity")
CubicAICBest=(sum(AnalysisDF['LowerAIC']=='Cubic' & AnalysisDF['SignifAIC']==TRUE))/SampleSize
LogisticAICBest=(sum(AnalysisDF['LowerAIC']=='Logistic' & AnalysisDF['SignifAIC']==TRUE))/SampleSize
NoAICBest=(sum(AnalysisDF['SignifAIC']==FALSE))/SampleSize
AIC <- c(CubicAICBest, LogisticAICBest, NoAICBest)
CubicRSSBest=sum(AnalysisDF['LowerRSS']=='Cubic')
LogisticRSSBest=sum(AnalysisDF['LowerRSS']=='Logistic')
NoRSSBest=sum(AnalysisDF['LowerRSS']=='None')
RSS <- c(CubicRSSBest, LogisticRSSBest, NoRSSBest)
## Chart ##
Best <- c("Cubic", "Logistic", "None")
Analysis <- data.frame(Best, AIC, RSS)
ggplot(Analysis, aes(x=Best, y=AIC)) +
geom_bar(stat="Identity")
ggplot(Analysis, aes(x=Best, y=AIC)) +
geom_bar(stat="Identity", position="fill")
library(viridis)
View(AnalysisDF)
CubicAICBest=sum(AnalysisDF['LowerAIC']=='Cubic' & AnalysisDF['SignifAIC']==TRUE)
LogisticAICBest=sum(AnalysisDF['LowerAIC']=='Logistic' & AnalysisDF['SignifAIC']==TRUE)
NoAICBest=sum(AnalysisDF['SignifAIC']==FALSE)
AIC <- c(CubicAICBest, LogisticAICBest, NoAICBest)
CubicRSSBest=sum(AnalysisDF['LowerRSS']=='Cubic')
LogisticRSSBest=sum(AnalysisDF['LowerRSS']=='Logistic')
NoRSSBest=sum(AnalysisDF['LowerRSS']=='None')
RSS <- c(CubicRSSBest, LogisticRSSBest, NoRSSBest)
Best <- c("Cubic", "Logistic", "None")
Analysis <- data.frame(Best, AIC, RSS)
ggplot(Analysis, aes(x=Best, y=AIC)) +
geom_bar(stat="Identity")
ggplot(Analysis, aes(x=Best, y=AIC)) +
geom_bar(stat="Identity") +
xlab("Statistical Model")
## Chart ##
Model <- c("Cubic", "Logistic", "No Significant Difference")
Analysis <- data.frame(Best, AIC, RSS)
pdf("../results/AICandRSS.pdf")
ggplot(Analysis, aes(x=Best, y=AIC)) +
geom_bar(stat="Identity") +
xlab("Lowest Significant AIC Value") +
ylab("Subsets i")
AnalysisDF <- read.csv("../results/Analysis.csv")
## metaanalysis ##
SampleSize <- dim(AnalysisDF)[1]
## AIC analysis ##
CubicAICBest=sum(AnalysisDF['LowerAIC']=='Cubic' & AnalysisDF['SignifAIC']==TRUE)
LogisticAICBest=sum(AnalysisDF['LowerAIC']=='Logistic' & AnalysisDF['SignifAIC']==TRUE)
NoAICBest=sum(AnalysisDF['SignifAIC']==FALSE)
AIC <- c(CubicAICBest, LogisticAICBest, NoAICBest)
CubicRSSBest=sum(AnalysisDF['LowerRSS']=='Cubic')
LogisticRSSBest=sum(AnalysisDF['LowerRSS']=='Logistic')
NoRSSBest=sum(AnalysisDF['LowerRSS']=='None')
RSS <- c(CubicRSSBest, LogisticRSSBest, NoRSSBest)
## Chart ##
Model <- c("Cubic", "Logistic", "No Significant Difference")
Analysis <- data.frame(Best, AIC, RSS)
ggplot(Analysis, aes(x=Best, y=AIC)) +
geom_bar(stat="Identity") +
xlab("Lowest Significant AIC Value") +
ylab("Subsets i")
ggplot(Analysis, aes(x=Best, y=AIC)) +
geom_bar(stat="Identity") +
xlab("Lowest Significant AIC Value") +
ylab("Subsets i")
dev.off()
ggplot(Analysis, aes(x=Best, y=AIC)) +
geom_bar(stat="Identity") +
xlab("Lowest Significant AIC Value") +
ylab("Subsets i")
ggplot(Analysis, aes(x=Best, y=AIC)) +
geom_bar(stat="Identity") +
xlab("Lowest Significant AIC Value") +
ylab("Number of subsets")
ggplot(Analysis, aes(x=Best, y=RSS)) +
geom_bar(stat="Identity") +
xlab("Lowest RSS Value") +
ylab("Number of subsets")
## Data ##
Models <- c("Cubic", "Logistic")
source("PlotandAnalyse.R")
source("PlotandAnalyse.R")
source("PlotandAnalyse.R")
source("PlotandAnalyse.R")
## imports ##
library(ggplot2)
rm(list=ls())
graphics.off()
## imports ##
library(ggplot2)
AnalysisDF <- read.csv("../results/Analysis.csv")
## metaanalysis ##
SampleSize <- dim(AnalysisDF)[1]
## AIC analysis ##
CubicAICBest=sum(AnalysisDF['LowerAIC']=='Cubic' & AnalysisDF['SignifAIC']==TRUE)
LogisticAICBest=sum(AnalysisDF['LowerAIC']=='Logistic' & AnalysisDF['SignifAIC']==TRUE)
NoAICBest=sum(AnalysisDF['SignifAIC']==FALSE)
AIC <- c(CubicAICBest, LogisticAICBest, NoAICBest)
## Data ##
AICHeadings <-c("Cubic", "Logistic", "No Significant Difference")
AICAnalysis <- data.frame(AICHeadings, AIC)
View(AICAnalysis)
pdf("../results/AIC.pdf")
ggplot(AICAnalysis, aes(x=Best, y=AIC)) +
geom_bar(stat="Identity") +
xlab("Lowest Significant AIC Value") +
ylab("Number of subsets")
dev.off()
pdf("../results/AIC.pdf")
ggplot(AICAnalysis, aes(x=AICHeadings, y=AIC)) +
geom_bar(stat="Identity") +
xlab("Lowest Significant AIC Value") +
ylab("Number of subsets")
dev.off()
## RSS analysis ##
CubicRSSBest=sum(AnalysisDF['LowerRSS']=='Cubic')
LogisticRSSBest=sum(AnalysisDF['LowerRSS']=='Logistic')
RSS <- c(CubicRSSBest, LogisticRSSBest)
## Data ##
RSSHeadings<- c("Cubic", "Logistic")
RSSAnalysis <- data.frame(RSSHeadings, RSS)
## Chart ##
pdf("../results/RSS.pdf")
ggplot(RSSAnalysis, aes(x=RSSHeadings, y=RSS)) +
geom_bar(stat="Identity") +
xlab("Lowest RSS Value") +
ylab("Number of subsets")
dev.off()
source("PlotandAnalyse.R")
source("PlotandAnalyse.R")
source("ModelFitting.R.R")
source("ModelFitting.R")
levelsummary<- summary(MyData$ID)
levelsummary
summary(MyData$ID)
levelsummary<- summary(MyData$ID)
View(MyData)
View(subset1)
summary(MyData)
View(MyData)
MyData <- as.data.frame(read_csv("../data/LogisticGrowthData.csv"), na.strings=("NA"))
MyData<-subset(MyData, Time>=0)
MyData <- as.data.frame(read_csv("../data/LogisticGrowthData.csv"), na.strings=("NA"))
MyData$ID <- paste(MyData$Species, MyData$Temp, MyData$Medium, MyData$Citation, sep=" ")
MyData$ID <- as.factor(MyData$ID)
levels(MyData$ID) <- 1:285
MyData<-subset(MyData, Time>=0)
MyData<-subset(MyData, PopBio>0)
MyData <- droplevels(MyData)
levels(MyData$ID) <- 1:nlevels(MyData$ID)
rm(list=ls())
require(tidyverse)
MyData <- as.data.frame(read_csv("../data/LogisticGrowthData.csv"), na.strings=("NA"))
MyData$ID <- paste(MyData$Species, MyData$Temp, MyData$Medium, MyData$Citation, sep=" ")
MyData$ID <- as.factor(MyData$ID)
levels(MyData$ID) <- 1:285
MyData<-subset(MyData, Time>=0)
MyData<-subset(MyData, PopBio>0)
MyData <- droplevels(MyData)
levels(MyData$ID) <- 1:nlevels(MyData$ID)
levelsummary<- summary(MyData$ID)
for (i in 1:nlevels(MyData$ID)){
if ((length(which(MyData$ID == i))) < 5) {
MyData <- MyData[!(MyData$ID==i),]
}
}
source("ModelFitting.R")
View(AnalysisDF)
View(AnalysisDF)
View(cubicmodel)
View(AnalysisDF)
summary(MyData$ID)
levelsummary<- summary(MyData$ID)
summary(MyData$ID)
(MyData$ID)
summary(MyData$ID)
MyData$ID
hist(MyData$ID)
class(MyData$ID)
hist(as.numeric(MyData$ID))
pdf("../results/SampleSizes.pdf")
hist(as.numeric(MyData$ID))
dev.off()
as.numeric(MyData$ID)
freq(as.numeric(MyData$ID))
hist(as.numeric(MyData$ID))
class(levelsummary)
levelsummary
levelsummary <- (summary(MyData$ID)[2])
levels()
levelsummary
levelsummary[1]
levelsummary[1,1]
class(levelsummary[1,1])
class(level(summary[1]))
class(levelsummary[1])
levelsummary <- (summary(MyData$ID)[])
levelsummary
View(AnalysisDF)
require(dplyr)
## imports ##
library(ggplot2)
AnalysisDF <- read.csv("../results/Analysis.csv")
## metaanalysis ##
SampleSize <- dim(AnalysisDF)[1]
## AIC analysis ##
CubicAICBest=sum(AnalysisDF['LowerAIC']=='Cubic' & AnalysisDF['SignifAIC']==TRUE)
LogisticAICBest=sum(AnalysisDF['LowerAIC']=='Logistic' & AnalysisDF['SignifAIC']==TRUE)
NoAICBest=sum(AnalysisDF['SignifAIC']==FALSE)
AIC <- c(CubicAICBest, LogisticAICBest, NoAICBest)
## Data ##
AICHeadings <-c("Cubic", "Logistic", "No Significant Difference")
AICAnalysis <- data.frame(AICHeadings, AIC)
## Chart ##
pdf("../results/AIC.pdf")
ggplot(AICAnalysis, aes(x=AICHeadings, y=AIC)) +
ggtitle("Comparison of Significant AIC Value Between Models") +
geom_bar(stat="Identity") +
xlab("Lowest Significant AIC Value") +
ylab("Number of subsets")
View(AICAnalysis)
View(AnalysisDF)
View(cubicmodel)
## RSS analysis ##
CubicRSSBest=sum(AnalysisDF['LowerRSS']=='Cubic')
LogisticRSSBest=sum(AnalysisDF['LowerRSS']=='Logistic')
RSS <- c(CubicRSSBest, LogisticRSSBest)
## Data ##
RSSHeadings<- c("Cubic", "Logistic")
RSSAnalysis <- data.frame(RSSHeadings, RSS)
## Chart ##
pdf("../results/RSS.pdf")
ggplot(RSSAnalysis, aes(x=RSSHeadings, y=RSS)) +
ggtitle("Comparison of Lowest RSS Value Between Models") +
geom_bar(stat="Identity") +
xlab("Lowest RSS Value") +
ylab("Number of subsets")
dev.off()
# perform any analyses of the results of the Model fitting, for example to summarize which model fits best, and address any biological questions involving covariates
View(PredictedCubic)
View(RSSAnalysis)
View(AICAnalysis)
View(AnalysisDF)
View(RSSAnalysis)
