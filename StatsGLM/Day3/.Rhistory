print(hello)
print("hello!")
require(ggplot2)
require(ggpubr)
worker <- read.csv("workerbees.csv", stringsAsFactors = T)
setwd("~/CMEECoursework/StatsGLM/Day3")
worker <- read.csv("workerbees.csv", stringsAsFactors = T)
str(worker)
head(worker)
ggplot(data=worker, mapping = aes(x=CellSize, y=Parasites))+ geom_point()+labs(x = "CellSize", y="Parasites")+theme_classic()
scatterplot <- ggplot(data=worker, mapping = aes(x=CellSize, y=Parasites))+ geom_point()+labs(x = "CellSize", y="Parasites")+theme_classic()
boxplot <- ggplot(data=worker, aes(x=CellSize, y=Parasites))+geom_boxplot()+theme_classic()+labs(x = "CellSize", y="Parasites")+theme_classic()
ggarrange(scatterplot, boxplot, labels=c("A", "B"), ncol=1, nrow=2)
scatterplot <- ggplot(data=worker, mapping = aes(x=CellSize, y=Parasites))+ geom_point()+labs(x = "CellSize", y="Parasites")+theme_classic()
boxplot <- ggplot(data=worker, aes(x=CellSize, y=Parasites))+geom_boxplot()+theme_classic()+labs(x = "CellSize", y="Parasites")+theme_classic()
dev.off()
scatterplot <- ggplot(data=worker, mapping = aes(x=CellSize, y=Parasites))+ geom_point()+labs(x = "Cell Size (cm)", y="Probability of arasites")+theme_classic()
boxplot <- ggplot(data=worker, aes(x=CellSize, y=Parasites))+geom_boxplot()+theme_classic()+labs(x = "Cell Size (cm)", y="Probability of parasites")+theme_classic()
ggarrange(scatterplot, boxplot, labels=c("A", "B"), ncol=1, nrow=2)
scatterplot <- ggplot(data=worker, mapping = aes(x=CellSize, y=Parasites))+ geom_point()+labs(x = "Cell Size (cm)", y="Probability of arasites")+theme_classic()
boxplot <- ggplot(data=worker, aes(x=Parasites, y=CellSize))+geom_boxplot()+theme_classic()+labs(x = "Probability of parasites", y="Cell Size (cm)")+theme_classic()
ggarrange(scatterplot, boxplot, labels=c("A", "B"), ncol=1, nrow=2)
scatterplot <- ggplot(data=worker, mapping = aes(x=CellSize, y=Parasites))+ geom_point()+labs(x = "Cell Size (cm)", y="Probability of arasites")+theme_classic()
boxplot <- ggplot(data=worker, aes(x=factor(Parasites), y=CellSize))+geom_boxplot()+theme_classic()+labs(x = "Probability of parasites", y="Cell Size (cm)")+theme_classic()
ggarrange(scatterplot, boxplot, labels=c("A", "B"), ncol=1, nrow=2)
workerm1 <- glm(formula= Parasites~CellSize, data=worker)
summary(workerm1)
workerm1 <- glm(formula= Parasites~CellSize, data=worker, family="binomial")
summary(workerm1)
anova(workerm1, test="Chiswq")
anova(workerm1, test="Chisq")
plogis(coef(workerm1))
range(worker$CellSize)
new_data <- data.frame(CellSize=seq(from=0.352, to= 0.664, length=100))
predictions <- predict(workerm1, newdata=new_data, type="link", se.fit=TRUE) # type=link predicts the fit and se on the log-linear scale
new_data$pred <- predictions$fit
new_data$se <- predictions$se.fit
new_data$upperCI <- new_data$pred+(new_data$se*1.96)
new_data$lowerCI <- new_data$pred-(new_data$se*1.96)
ggplot(new_data, aes(x=CellSize, y=exp(pred)))+
geom_line(col="black")+
geom_ribbon(aes(ymin=exp(lowerCI), ymax=exp(upperCI), alpha=0.1), show.legend=FALSE, fill="grey")+
geom_point(mites, mapping=aes(x=CellSize, y=Parasites), col="blue")+
lab(x = "Cell Size (cm)", y="Probability of parasites")+
theme_classic()
ggplot(new_data, aes(x=CellSize, y=exp(pred)))+
geom_line(col="black")+
geom_ribbon(aes(ymin=exp(lowerCI), ymax=exp(upperCI), alpha=0.1), show.legend=FALSE, fill="grey")+
geom_point(worker, mapping=aes(x=CellSize, y=Parasites), col="blue")+
lab(x = "Cell Size (cm)", y="Probability of parasites")+
theme_classic()
ggplot(new_data, aes(x=CellSize, y=exp(pred)))+
geom_line(col="black")+
geom_ribbon(aes(ymin=exp(lowerCI), ymax=exp(upperCI), alpha=0.1), show.legend=FALSE, fill="grey")+
geom_point(worker, mapping=aes(x=CellSize, y=Parasites), col="blue")+
lab(x = "Cell Size (cm)", y="Probability of parasites")+
theme_classic()
ggplot(new_data, aes(x=CellSize, y=exp(pred)))+
geom_line(col="black")+
geom_ribbon(aes(ymin=exp(lowerCI), ymax=exp(upperCI), alpha=0.1), show.legend=FALSE, fill="grey")+
geom_point(worker, mapping=aes(x=CellSize, y=Parasites), col="blue")+
labs(x = "Cell Size (cm)", y="Probability of parasites")+
theme_classic()
ggplot(new_data, aes(x=CellSize, y=plogis(pred)))+
geom_line(col="black")+
geom_ribbon(aes(ymin=plogis(lowerCI), ymax=plogis(upperCI), alpha=0.1), show.legend=FALSE, fill="grey")+
geom_point(worker, mapping=aes(x=CellSize, y=Parasites), col="blue")+
labs(x = "Cell Size (cm)", y="Probability of parasites")+
theme_classic()
ggplot(new_data, aes(x=CellSize, y=plogis(pred)))+
geom_line(col="black")+
geom_ribbon(aes(ymin=plogis(lowerCI), ymax=plogis(upperCI), alpha=0.2), show.legend=FALSE, fill="grey")+
geom_point(worker, mapping=aes(x=CellSize, y=Parasites), col="blue")+
labs(x = "Cell Size (cm)", y="Probability of parasites")+
theme_classic()
ggplot(new_data, aes(x=CellSize, y=plogis(pred)))+
geom_line(col="black")+
geom_ribbon(aes(ymin=plogis(lowerCI), ymax=plogis(upperCI), alpha=0.2), show.legend=FALSE, fill="grey")+
geom_point(worker, mapping=aes(x=CellSize, y=Parasites), col="blue")+
labs(x = "Cell Size (cm)", y="Probability of parasites")+
theme_classic()
chytric <- read.csv("chytrid.csv", stringsAsFactors = T)
str(chytrid)
chytrid <- read.csv("chytrid.csv", stringsAsFactors = T)
str(chytrid)
scatterplot <- ggplot(data=chytrid, mapping = aes(x=Springavgtemp, y=InfectionStatus))+ geom_point()+labs(x = "Spring temperature", y="Infection status")+theme_classic()
boxplot <- ggplot(data=chytrid, aes(x=factor(InfectionStatus), y=Springavgtemp))+geom_boxplot()+theme_classic()+labs(x = "Infection status", y="Spring temperature")+theme_classic()
ggarrange(scatterplot, boxplot, labels=c("A", "B"), ncol=1, nrow=2)
scatterplot <- ggplot(data=chytrid, mapping = aes(x=Springavgtemp, y=InfectionStatus))+ geom_point()+labs(x = "Spring temperature", y="Probability of Infection")+theme_classic()
boxplot <- ggplot(data=chytrid, aes(x=factor(InfectionStatus), y=Springavgtemp))+geom_boxplot()+theme_classic()+labs(x = "Probability of Infection", y="Spring temperature")+theme_classic()
ggarrange(scatterplot, boxplot, labels=c("A", "B"), ncol=1, nrow=2)
chytridm1 <- glm(data = chytrid, formula = InfectionStatus~Springavgtemp, family="binomial")
summary(chytridm1)
anova(chytridm1, test="Chisq")
#Pseudo R^2 = 0.005, model explains 5% of data
# dispersion parameter = 1.36, slightly overdispersed
# logit (probability of infection) = -0.06 + 0.05*Springavgtemp
plogis(coef(chytridm1))
plogis(coef(workerm1))
range(chytrid$Springavgtemp)
new_data <- data.frame(Springavgtemp=seq(from=0.997, to= 13.664, length=100))
predictions <- predict(chytridm1, newdata=new_data, type="link", se.fit=TRUE) # type=link predicts the fit and se on the log-linear scale
new_data$pred <- predictions$fit
new_data$se <- predictions$se.fit
new_data$upperCI <- new_data$pred+(new_data$se*1.96)
new_data$lowerCI <- new_data$pred-(new_data$se*1.96)
ggplot(new_data, aes(xSpringavgtemp, y=plogis(pred)))+
geom_line(col="black")+
geom_ribbon(aes(ymin=plogis(lowerCI), ymax=plogis(upperCI), alpha=0.2), show.legend=FALSE, fill="grey")+
geom_point(chytrid, mapping=aes(x=Springavgtemp, y=InfectionStatus), col="blue")+
labs(x = "Spring temp (degrees)", y="Probability of infection")+
theme_classic()
ggplot(new_data, aes(Springavgtemp, y=plogis(pred)))+
geom_line(col="black")+
geom_ribbon(aes(ymin=plogis(lowerCI), ymax=plogis(upperCI), alpha=0.2), show.legend=FALSE, fill="grey")+
geom_point(chytrid, mapping=aes(x=Springavgtemp, y=InfectionStatus), col="blue")+
labs(x = "Spring temp (degrees)", y="Probability of infection")+
theme_classic()
chytrid_binomial <- read.csv("chytrid_binomial.csv", stringsAsFactors = T)
str(chytrid_binomail)
str(chytrid_binomial)
chytridm2 <- glm(cbind(Positives, Total-Positives)~AverageSpringTemp, data = chytrid, family="binomial")
chytridm2 <- glm(cbind(Positives, Total-Positives)~AverageSpringTemp, data = chytrid_binomial, family="binomial")
summary(chytridm2)
anova(chytridm1, test="Chisq")
anova(chytridm2, test="Chisq")
#Pseudo R^2 = 0.005, model explains 0.5% of data
# logit (probability of infection) = -0.4 + 0.08*Springavgtemp
plogis(coef(chytridm2))
#Pseudo R^2 = 0.05, model explains 5% of data
# logit (probability of infection) = -0.4 + 0.08*Springavgtemp
plogis(coef(chytridm2))
range(chytrid_binomial$Springavgtemp)
range(chytrid_binomial$Springavgtemp)
par(mfrow=c(2,2))
plot(chytridm2)
#Residuals vs levergae suggests a number of outliers that are causing overdispersion
sum(cooks.distance(chytridm2)> 1)
chytridm3 <- glm(cbind(Positives, Total-Positives)~AverageSpringTemp, data = chytrid_binomial, family="quasibinomial")
summary(chytridm3)
anova(chytridm3, test="Chisq")
par(mfrow=c(2,2))
plot(chytridm3)
plot(chytridm2)
plot(chytridm3)
#Residuals vs levergae suggests a number of outliers that are causing overdispersion
sum(cooks.distance(chytridm3)> 1)
range(chytrid_binomial$Springavgtemp)
range(chytrid_binomial$AverageSpringTemp)
new_data <- data.frame(Springavgtemp=seq(from=0.997, to= 13.664, length=100))
predictions <- predict(chytridm3, newdata=new_data, type="link", se.fit=TRUE) # type=link predicts the fit and se on the log-linear scale
new_data <- data.frame(AvgSpringTemp=seq(from=0.997, to= 13.664, length=100))
predictions <- predict(chytridm3, newdata=new_data, type="link", se.fit=TRUE) # type=link predicts the fit and se on the log-linear scale
range(chytrid_binomial$AvgSpringTemp)
new_data <- data.frame(AverageSpringTemp=seq(from=0.997, to= 13.664, length=100))
predictions <- predict(chytridm3, newdata=new_data, type="link", se.fit=TRUE) # type=link predicts the fit and se on the log-linear scale
new_data$pred <- predictions$fit
new_data$se <- predictions$se.fit
new_data$upperCI <- new_data$pred+(new_data$se*1.96)
new_data$lowerCI <- new_data$pred-(new_data$se*1.96)
ggplot(new_data, aes(AverageSpringTemp, y=plogis(pred)))+
geom_line(col="black")+
geom_ribbon(aes(ymin=plogis(lowerCI), ymax=plogis(upperCI), alpha=0.2), show.legend=FALSE, fill="grey")+
geom_point(chytrid_binomial, mapping=aes(x=AverageSpringTemp, y=InfectionStatus), col="blue")+
labs(x = "Spring temp (degrees)", y="Probability of infection")+
theme_classic()
dev.off()
ggplot(new_data, aes(AverageSpringTemp, y=plogis(pred)))+
geom_line(col="black")+
geom_ribbon(aes(ymin=plogis(lowerCI), ymax=plogis(upperCI), alpha=0.2), show.legend=FALSE, fill="grey")+
geom_point(chytrid_binomial, mapping=aes(x=AverageSpringTemp, y=InfectionStatus), col="blue")+
labs(x = "Spring temp (degrees)", y="Probability of infection")+
theme_classic()
ggplot(new_data, aes(AverageSpringTemp, y=plogis(pred)))+
geom_line(col="black")+
geom_ribbon(aes(ymin=plogis(lowerCI), ymax=plogis(upperCI), alpha=0.2), show.legend=FALSE, fill="grey")+
geom_point(chytrid_binomial, mapping=aes(x=AverageSpringTemp, y=(Positives/Total)), col="blue")+
labs(x = "Spring temp (degrees)", y="Probability of infection")+
theme_classic()
# Bee mites data
mites <- read.csv("bee_mites.csv", stringsAsFactors = T)
str(mites)
head(mites)
ggplot(data=mites, mapping = aes(x=Concentration, y=Dead_mites))+ geom_point()+labs(x = "Concentration", y="Dead mites")+theme_classic()
mitemodel2 <- glm(Dead_mites~Concentration, data=mites, family="binomial")
mitemodel2 <- glm(Dead_mites~Proportion, data=mites, family="binomial")
mitemodel2 <- glm(cbind(Dead_mites, Total-Dead_mites)~Concentration, data=mites, family="binomial")
summary(mitemodel2)
anova(mitemodel2, test="Chisq")
# plots
par(mfrow=c(2,2))
plot(mitemodel2)
sum(cooks.distance(mitemodel2)> 1)
mitemodel1 <- glm(Dead_mites~Concentration, data=mites, family="poisson")
#step 2: model diagnostic plots
par(mfrow=c(2,2))
plot(mitemodel1)
range(mites$Concentration)
new_data <- data.frame(Concentration=seq(from=0, to=2.16, length=115))
predictions <- predict(mitemodel2, newdata=new_data, type="link", se.fit=TRUE) # type=link predicts the fit and se on the log-linear scale
new_data$pred <- predictions$fit
new_data$se <- predictions$se.fit
new_data$upperCI <- new_data$pred+(new_data$se*1.96)
new_data$lowerCI <- new_data$pred-(new_data$se*1.96)
ggplot(new_data, aes(x=Concentration, y=exp(pred)))+
geom_line(col="black")+
geom_ribbon(aes(ymin=exp(lowerCI), ymax=exp(upperCI), alpha=0.1), show.legend=FALSE, fill="grey")+
geom_point(mites, mapping=aes(x=Concentration, y=Dead_mites/(Total-Dead_mites)), col="blue")+
labs(y="Number of Dead Mites", x="Concentration (g/l)")+
theme_classic()
ggplot(new_data, aes(x=Concentration, y=exp(pred)))+
geom_line(col="black")+
geom_ribbon(aes(ymin=exp(lowerCI), ymax=exp(upperCI), alpha=0.1), show.legend=FALSE, fill="grey")+
geom_point(mites, mapping=aes(x=Concentration, y=Dead_mites), col="blue")+
labs(y="Number of Dead Mites", x="Concentration (g/l)")+
theme_classic()
ggplot(new_data, aes(x=Concentration, y=exp(pred)))+
geom_line(col="black")+
geom_ribbon(aes(ymin=exp(lowerCI), ymax=exp(upperCI), alpha=0.1), show.legend=FALSE, fill="grey")+
geom_point(mites, mapping=aes(x=Concentration, y=Dead_mites), col="blue")+
labs(y="Number of Dead Mites", x="Concentration (g/l)")+
theme_classic()
dev.off()
new_data <- data.frame(Concentration=seq(from=0, to=2.16, length=115))
predictions <- predict(mitemodel1, newdata=new_data, type="link", se.fit=TRUE) # type=link predicts the fit and se on the log-linear scale
new_data$pred <- predictions$fit
new_data$se <- predictions$se.fit
new_data$upperCI <- new_data$pred+(new_data$se*1.96)
new_data$lowerCI <- new_data$pred-(new_data$se*1.96)
ggplot(new_data, aes(x=Concentration, y=exp(pred)))+
geom_line(col="black")+
geom_ribbon(aes(ymin=exp(lowerCI), ymax=exp(upperCI), alpha=0.1), show.legend=FALSE, fill="grey")+
geom_point(mites, mapping=aes(x=Concentration, y=Dead_mites), col="blue")+
labs(y="Number of Dead Mites", x="Concentration (g/l)")+
theme_classic()
new_data <- data.frame(Concentration=seq(from=0, to=2.16, length=115))
predictions <- predict(mitemodel2, newdata=new_data, type="link", se.fit=TRUE) # type=link predicts the fit and se on the log-linear scale
new_data$pred <- predictions$fit
new_data$se <- predictions$se.fit
new_data$upperCI <- new_data$pred+(new_data$se*1.96)
new_data$lowerCI <- new_data$pred-(new_data$se*1.96)
ggplot(new_data, aes(x=Concentration, y=exp(pred)))+
geom_line(col="black")+
geom_ribbon(aes(ymin=exp(lowerCI), ymax=exp(upperCI), alpha=0.1), show.legend=FALSE, fill="grey")+
geom_point(mites, mapping=aes(x=Concentration, y=Dead_mites/(Total-Dead_mites)), col="blue")+
labs(y="Number of Dead Mites", x="Concentration (g/l)")+
theme_classic()
#step 2: model diagnostic plots
par(mfrow=c(2,2))
plot(mitemodel1)
# plots
par(mfrow=c(2,2))
plot(mitemodel2)
mitemodel2 <- glm(cbind(Dead_mites, Total-Dead_mites)~Concentration, data=mites, family="quasibinomial")
mitemodel2 <- glm(cbind(Dead_mites, Total-Dead_mites)~Concentration, data=mites, family="binomial")
mitemodel3 <- glm(cbind(Dead_mites, Total-Dead_mites)~Concentration, data=mites, family="quasibinomial")
summary(mitemodel3)
anova(mitemodel3, test="Chisq")
# plots
par(mfrow=c(2,2))
plot(mitemodel3)
new_data <- data.frame(Concentration=seq(from=0, to=2.16, length=115))
predictions <- predict(mitemodel3, newdata=new_data, type="link", se.fit=TRUE) # type=link predicts the fit and se on the log-linear scale
new_data$pred <- predictions$fit
new_data$se <- predictions$se.fit
new_data$upperCI <- new_data$pred+(new_data$se*1.96)
new_data$lowerCI <- new_data$pred-(new_data$se*1.96)
ggplot(new_data, aes(x=Concentration, y=exp(pred)))+
geom_line(col="black")+
geom_ribbon(aes(ymin=exp(lowerCI), ymax=exp(upperCI), alpha=0.1), show.legend=FALSE, fill="grey")+
geom_point(mites, mapping=aes(x=Concentration, y=Dead_mites/(Total-Dead_mites)), col="blue")+
labs(y="Number of Dead Mites", x="Concentration (g/l)")+
theme_classic()
range(mites$Concentration)
new_data <- data.frame(Concentration=seq(from=0, to=2.16, length=100))
predictions <- predict(mitemodel3, newdata=new_data, type="link", se.fit=TRUE) # type=link predicts the fit and se on the log-linear scale
new_data$pred <- predictions$fit
new_data$se <- predictions$se.fit
new_data$upperCI <- new_data$pred+(new_data$se*1.96)
new_data$lowerCI <- new_data$pred-(new_data$se*1.96)
ggplot(new_data, aes(x=Concentration, y=exp(pred)))+
geom_line(col="black")+
geom_ribbon(aes(ymin=exp(lowerCI), ymax=exp(upperCI), alpha=0.1), show.legend=FALSE, fill="grey")+
geom_point(mites, mapping=aes(x=Concentration, y=Dead_mites/(Total-Dead_mites)), col="blue")+
labs(y="Number of Dead Mites", x="Concentration (g/l)")+
theme_classic()
ggplot(new_data, aes(x=Concentration, y=exp(pred)))+
geom_line(col="black")+
geom_ribbon(aes(ymin=exp(lowerCI), ymax=exp(upperCI), alpha=0.1), show.legend=FALSE, fill="grey")+
geom_point(mites, mapping=aes(x=Concentration, y=Dead_mites/Total), col="blue")+
labs(y="Number of Dead Mites", x="Concentration (g/l)")+
theme_classic()
ggplot(new_data, aes(x=Concentration, y=plogis(pred)))+
geom_line(col="black")+
geom_ribbon(aes(ymin=plogis(lowerCI), ymax=plogis(upperCI), alpha=0.1), show.legend=FALSE, fill="grey")+
geom_point(mites, mapping=aes(x=Concentration, y=Dead_mites/Total), col="blue")+
labs(y="Number of Dead Mites", x="Concentration (g/l)")+
theme_classic()
