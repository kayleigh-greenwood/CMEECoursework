for (i in (1:largest_oct_vect_length)){
binnames <- append(binnames, paste(binstartingvals[i], "≤ x <", 2*binstartingvals[i]))
}
# work out ylim
allvalues <- append(oct_vect_mean1, oct_vect_mean2)
limit <- max(allvalues)
# put groups into table
mydf1 <-t(oct_vect_mean1)
mydf2 <-t(oct_vect_mean2)
mydf <- rbind(mydf1, mydf2)
mymatrix <- as.matrix(mydf)
# overlaying barplots
barplot(mymatrix, beside = TRUE, names.arg=binnames, main= "Mean Species Abundance Distribution", xlab = "Species Abundance (Individuals per species)", ylab = "Frequency (number of species)", ylim = c(0,(limit)*1.1), xpd = FALSE, col = c("palegreen", "orchid"), border = c("palegreen4", "orchid4"), width = 2)
# barplot(oct_vect_mean2, names.arg=binnames2, xpd = FALSE, col = "orchid", border = "orchid4", add=TRUE, width = 1, space = c(1.5, rep(2, length(binnames2)-1)))
legend("topright", legend=c("Initial maximal species richness", "Initial minimal species richness"), fill =c("palegreen", "orchid"))
return ("The initial size of a community does not influence the pattern of frequency within each species abundance octave class, but frequency does increase as community increases. The number of individuals in a community influences the abundance of species with only one individual. An observed pattern is that the number of species with only one individual is usually around 10% of the community size.  A pattern is also seen in species abundance in that the lower species abundance is, the more species there are with that species abundance.
The initial speciation rate has a demonstrable effect on species abundance. Species rate seems to determine the distribution of species abundances. The higher the speciation rate, the higher the species diversity and therefore the individuals are distributed amongst more species, meaning species abundances are lower. The higher speciation rate gets, the more right skewed species abundance gets. The speciation rate determines the percentage of species that contain only one individual. For example, if speciation rate is 0.1, 10% of the species abundances will be 1. Therefore 10% of the community will be in their own unique species. Increasing speciation rate eradicates the higher species abundances. So speciation rate also affects the upper limit of species abundance.
The initial species richness has litle to no effect on eventual species abundance, especially after 2200 generations. Both species abundances displayed the same patterns at the same frequencies when in the same initial conditions.")
}
# Question 17
cluster_run <- function(speciation_rate, size, wall_time, interval_rich, interval_oct, burn_in_generations, output_file_name)  {
ptm <- proc.time()[3]
community <- init_community_min(size)
counter = 0
speciesrichness <- c()
abundanceoctaves <- list()
while (((proc.time()[3])-ptm) < (wall_time*60)) {
counter = counter + 1
community <- neutral_generation_speciation(community, speciation_rate)
if (((counter %% interval_rich)==0) && (counter <= burn_in_generations)){
speciesrichness <- append(speciesrichness, species_richness(community))
}
if ((counter %% interval_oct) == 0){
abundanceoctaves <- append(abundanceoctaves, list(octaves(species_abundance(community))))
}
}
elapsedtime <- (proc.time()[3]-ptm)
save(speciesrichness, abundanceoctaves, community, elapsedtime, speciation_rate, size, wall_time, interval_rich, interval_oct, burn_in_generations, file = output_file_name)
}
# Questions 18 and 19 involve writing code elsewhere to run your simulations on the cluster
# personal speciation rate: 0.0066439
# Question 20
process_cluster_results()
# load combined_results from your rda file
load(file = "cluster_octave_results.rda")
View(combined_results)
View(combined_results)
size500data <- combined_results[[1]]
binstartingvals500 <- c(1)
for (i in (2:length(size500data))){
binstartingvals500 <- append(binstartingvals500, binstartingvals500[i-1]*2)
}
binnames500 <- c()
for (i in (1:length(size500data))){
binnames500 <- append(binnames500, paste(binstartingvals500[i], "≤ x <", 2*binstartingvals500[i]))
}
binstartingvals500 <- c(1)
for (i in (2:length(size500data))){
binstartingvals500 <- append(binstartingvals500, binstartingvals500[i-1]*2)
}
binnames500 <- c()
for (i in (1:length(size500data))){
binnames500 <- append(binnames500, paste(binstartingvals500[i], "≤ x <", 2*binstartingvals500[i]))
}
binstartingvals1000 <- c(1)
for (i in (2:length(size1000data))){
binstartingvals1000 <- append(binstartingvals1000, binstartingvals1000[i-1]*2)
}
binnames1000 <- c()
for (i in (1:length(size1000data))){
binnames1000 <- append(binnames1000, paste(binstartingvals1000[i], "≤ x <", 2*binstartingvals1000[i]))
}
size1000data <- combined_results[[2]]
binstartingvals500 <- c(1)
for (i in (2:length(size500data))){
binstartingvals500 <- append(binstartingvals500, binstartingvals500[i-1]*2)
}
binnames500 <- c()
for (i in (1:length(size500data))){
binnames500 <- append(binnames500, paste(binstartingvals500[i], "≤ x <", 2*binstartingvals500[i]))
}
binstartingvals1000 <- c(1)
for (i in (2:length(size1000data))){
binstartingvals1000 <- append(binstartingvals1000, binstartingvals1000[i-1]*2)
}
binnames1000 <- c()
for (i in (1:length(size1000data))){
binnames1000 <- append(binnames1000, paste(binstartingvals1000[i], "≤ x <", 2*binstartingvals1000[i]))
}
sizes <- c(500, 1000, 2500, 5000)
for (i in sizes){
print (i)
}
sizes <- c(500, 1000, 2500, 5000)
for (i in sizes){
binstartingvals <- c(1)
for (i in (2:length(sizedata))){
binstartingvals <- append(binstartingvals, binstartingvals[i-1]*2)
}
binnames <- c()
for (i in (1:length(size500data))){
binnames <- append(binnames, paste(binstartingvals[i], "≤ x <", 2*binstartingvals[i]))
}
paste("bin_names_size_", i, sep="") = binnames
}
sizes <- c(500, 1000, 2500, 5000)
for (i in sizes){
binstartingvals <- c(1)
for (i in (2:length(paste("size", i, "data", sep="")))){
binstartingvals <- append(binstartingvals, binstartingvals[i-1]*2)
}
binnames <- c()
for (i in (1:length(paste("size", i, "data", sep="")))){
binnames <- append(binnames, paste(binstartingvals[i], "≤ x <", 2*binstartingvals[i]))
}
paste("bin_names_size_", i, sep="") = binnames
}
# determine bin names
binstartingvals500 <- c(1)
for (i in (2:length(size500data))){
binstartingvals500 <- append(binstartingvals500, binstartingvals500[i-1]*2)
}
binnames500 <- c()
for (i in (1:length(size500data))){
binnames500 <- append(binnames500, paste(binstartingvals500[i], "≤ x <", 2*binstartingvals500[i]))
}
binstartingvals1000 <- c(1)
for (i in (2:length(size1000data))){
binstartingvals1000 <- append(binstartingvals1000, binstartingvals1000[i-1]*2)
}
binnames1000 <- c()
for (i in (1:length(size1000data))){
binnames1000 <- append(binnames1000, paste(binstartingvals1000[i], "≤ x <", 2*binstartingvals1000[i]))
}
binstartingvals2500 <- c(1)
for (i in (2:length(sizedata))){
binstartingvals2500 <- append(binstartingvals2500, binstartingvals2500[i-1]*2)
}
binnames2500 <- c()
for (i in (1:length(size2500data))){
binnames2500 <- append(binnames2500, paste(binstartingvals2500[i], "≤ x <", 2*binstartingvals2500[i]))
}
binstartingvals5000 <- c(1)
for (i in (2:length(sizedata))){
binstartingvals5000 <- append(binstartingvals5000, binstartingvals5000[i-1]*2)
}
binnames5000 <- c()
for (i in (1:length(size5000data))){
binnames5000 <- append(binnames5000, paste(binstartingvals5000[i], "≤ x <", 2*binstartingvals5000[i]))
}
binstartingvals500 <- c(1)
for (i in (2:length(size500data))){
binstartingvals500 <- append(binstartingvals500, binstartingvals500[i-1]*2)
}
binnames500 <- c()
for (i in (1:length(size500data))){
binnames500 <- append(binnames500, paste(binstartingvals500[i], "≤ x <", 2*binstartingvals500[i]))
}
binstartingvals1000 <- c(1)
for (i in (2:length(size1000data))){
binstartingvals1000 <- append(binstartingvals1000, binstartingvals1000[i-1]*2)
}
binnames1000 <- c()
for (i in (1:length(size1000data))){
binnames1000 <- append(binnames1000, paste(binstartingvals1000[i], "≤ x <", 2*binstartingvals1000[i]))
}
binstartingvals2500 <- c(1)
for (i in (2:length(size2500data))){
binstartingvals2500 <- append(binstartingvals2500, binstartingvals2500[i-1]*2)
}
binnames2500 <- c()
for (i in (1:length(size2500data))){
binnames2500 <- append(binnames2500, paste(binstartingvals2500[i], "≤ x <", 2*binstartingvals2500[i]))
}
binstartingvals5000 <- c(1)
for (i in (2:length(size5000data))){
binstartingvals5000 <- append(binstartingvals5000, binstartingvals5000[i-1]*2)
}
binnames5000 <- c()
for (i in (1:length(size5000data))){
binnames5000 <- append(binnames5000, paste(binstartingvals5000[i], "≤ x <", 2*binstartingvals5000[i]))
}
size500data <- combined_results[[1]]
size1000data <- combined_results[[2]]
size2500data <- combined_results[[3]]
size5000data <- combined_results[[4]]
binstartingvals500 <- c(1)
for (i in (2:length(size500data))){
binstartingvals500 <- append(binstartingvals500, binstartingvals500[i-1]*2)
}
binnames500 <- c()
for (i in (1:length(size500data))){
binnames500 <- append(binnames500, paste(binstartingvals500[i], "≤ x <", 2*binstartingvals500[i]))
}
binstartingvals1000 <- c(1)
for (i in (2:length(size1000data))){
binstartingvals1000 <- append(binstartingvals1000, binstartingvals1000[i-1]*2)
}
binnames1000 <- c()
for (i in (1:length(size1000data))){
binnames1000 <- append(binnames1000, paste(binstartingvals1000[i], "≤ x <", 2*binstartingvals1000[i]))
}
binstartingvals2500 <- c(1)
for (i in (2:length(size2500data))){
binstartingvals2500 <- append(binstartingvals2500, binstartingvals2500[i-1]*2)
}
binnames2500 <- c()
for (i in (1:length(size2500data))){
binnames2500 <- append(binnames2500, paste(binstartingvals2500[i], "≤ x <", 2*binstartingvals2500[i]))
}
binstartingvals5000 <- c(1)
for (i in (2:length(size5000data))){
binstartingvals5000 <- append(binstartingvals5000, binstartingvals5000[i-1]*2)
}
binnames5000 <- c()
for (i in (1:length(size5000data))){
binnames5000 <- append(binnames5000, paste(binstartingvals5000[i], "≤ x <", 2*binstartingvals5000[i]))
}
# plot
plot_cluster_results <- function()  {
# clear any existing graphs and plot your graph within the R window
graphics.off()
# load combined_results from your rda file
load(file = "cluster_octave_results.rda")
size500data <- combined_results[[1]]
size1000data <- combined_results[[2]]
size2500data <- combined_results[[3]]
size5000data <- combined_results[[4]]
# assemble the data
# determine bin names
binstartingvals500 <- c(1)
for (i in (2:length(size500data))){
binstartingvals500 <- append(binstartingvals500, binstartingvals500[i-1]*2)
}
binnames500 <- c()
for (i in (1:length(size500data))){
binnames500 <- append(binnames500, paste(binstartingvals500[i], "≤ x <", 2*binstartingvals500[i]))
}
binstartingvals1000 <- c(1)
for (i in (2:length(size1000data))){
binstartingvals1000 <- append(binstartingvals1000, binstartingvals1000[i-1]*2)
}
binnames1000 <- c()
for (i in (1:length(size1000data))){
binnames1000 <- append(binnames1000, paste(binstartingvals1000[i], "≤ x <", 2*binstartingvals1000[i]))
}
binstartingvals2500 <- c(1)
for (i in (2:length(size2500data))){
binstartingvals2500 <- append(binstartingvals2500, binstartingvals2500[i-1]*2)
}
binnames2500 <- c()
for (i in (1:length(size2500data))){
binnames2500 <- append(binnames2500, paste(binstartingvals2500[i], "≤ x <", 2*binstartingvals2500[i]))
}
binstartingvals5000 <- c(1)
for (i in (2:length(size5000data))){
binstartingvals5000 <- append(binstartingvals5000, binstartingvals5000[i-1]*2)
}
binnames5000 <- c()
for (i in (1:length(size5000data))){
binnames5000 <- append(binnames5000, paste(binstartingvals5000[i], "≤ x <", 2*binstartingvals5000[i]))
}
# plot the graphs
# plot size 500 first
barplot(size500data, names.arg = binnames500, ylim=c(0,(1.1*(max(size500data)))), main= "Mean Species Abundance Distribution for Community Size 500", xlab = "Species Abundance (Individuals per species)", ylab = "Frequency (number of species)")
return(combined_results)
}
plot_cluster_results()
plot_cluster_results <- function()  {
# clear any existing graphs and plot your graph within the R window
graphics.off()
# load combined_results from your rda file
load(file = "cluster_octave_results.rda")
size500data <- combined_results[[1]]
size1000data <- combined_results[[2]]
size2500data <- combined_results[[3]]
size5000data <- combined_results[[4]]
# assemble the data
# determine bin names
binstartingvals500 <- c(1)
for (i in (2:length(size500data))){
binstartingvals500 <- append(binstartingvals500, binstartingvals500[i-1]*2)
}
binnames500 <- c()
for (i in (1:length(size500data))){
binnames500 <- append(binnames500, paste(binstartingvals500[i], "≤ x <", 2*binstartingvals500[i]))
}
binstartingvals1000 <- c(1)
for (i in (2:length(size1000data))){
binstartingvals1000 <- append(binstartingvals1000, binstartingvals1000[i-1]*2)
}
binnames1000 <- c()
for (i in (1:length(size1000data))){
binnames1000 <- append(binnames1000, paste(binstartingvals1000[i], "≤ x <", 2*binstartingvals1000[i]))
}
binstartingvals2500 <- c(1)
for (i in (2:length(size2500data))){
binstartingvals2500 <- append(binstartingvals2500, binstartingvals2500[i-1]*2)
}
binnames2500 <- c()
for (i in (1:length(size2500data))){
binnames2500 <- append(binnames2500, paste(binstartingvals2500[i], "≤ x <", 2*binstartingvals2500[i]))
}
binstartingvals5000 <- c(1)
for (i in (2:length(size5000data))){
binstartingvals5000 <- append(binstartingvals5000, binstartingvals5000[i-1]*2)
}
binnames5000 <- c()
for (i in (1:length(size5000data))){
binnames5000 <- append(binnames5000, paste(binstartingvals5000[i], "≤ x <", 2*binstartingvals5000[i]))
}
# plot the graphs
# initialise multi panelled plot
par(mfcol=c(2,2))
# plot size 500 first
par(mfg=c(1,2))
barplot(size500data, names.arg = binnames500, ylim=c(0,(1.1*(max(size500data)))), main= "Mean Species Abundance Distribution for Community Size 500", xlab = "Species Abundance (Individuals per species)", ylab = "Frequency (number of species)")
# plot size 1000
par(mfg=c(2,2))
barplot(size1000data, names.arg = binnames1000, ylim=c(0,(1.1*(max(size1000data)))), main= "Mean Species Abundance Distribution for Community Size 1000", xlab = "Species Abundance (Individuals per species)", ylab = "Frequency (number of species)")
# plot size 2500
par(mfg=c(1,1))
barplot(size2500data, names.arg = binnames2500, ylim=c(0,(1.1*(max(size2500data)))), main= "Mean Species Abundance Distribution for Community Size 2500", xlab = "Species Abundance (Individuals per species)", ylab = "Frequency (number of species)")
# plot size 5000
par(mfg=c(2,1))
barplot(size5000data, names.arg = binnames5000, ylim=c(0,(1.1*(max(size5000data)))), main= "Mean Species Abundance Distribution for Community Size 5000", xlab = "Species Abundance (Individuals per species)", ylab = "Frequency (number of species)")
return(combined_results)
}
plot_cluster_results()
plot_cluster_results <- function()  {
# clear any existing graphs and plot your graph within the R window
graphics.off()
# load combined_results from your rda file
load(file = "cluster_octave_results.rda")
size500data <- combined_results[[1]]
size1000data <- combined_results[[2]]
size2500data <- combined_results[[3]]
size5000data <- combined_results[[4]]
# assemble the data
# determine bin names
binstartingvals500 <- c(1)
for (i in (2:length(size500data))){
binstartingvals500 <- append(binstartingvals500, binstartingvals500[i-1]*2)
}
binnames500 <- c()
for (i in (1:length(size500data))){
binnames500 <- append(binnames500, paste(binstartingvals500[i], "≤ x <", 2*binstartingvals500[i]))
}
binstartingvals1000 <- c(1)
for (i in (2:length(size1000data))){
binstartingvals1000 <- append(binstartingvals1000, binstartingvals1000[i-1]*2)
}
binnames1000 <- c()
for (i in (1:length(size1000data))){
binnames1000 <- append(binnames1000, paste(binstartingvals1000[i], "≤ x <", 2*binstartingvals1000[i]))
}
binstartingvals2500 <- c(1)
for (i in (2:length(size2500data))){
binstartingvals2500 <- append(binstartingvals2500, binstartingvals2500[i-1]*2)
}
binnames2500 <- c()
for (i in (1:length(size2500data))){
binnames2500 <- append(binnames2500, paste(binstartingvals2500[i], "≤ x <", 2*binstartingvals2500[i]))
}
binstartingvals5000 <- c(1)
for (i in (2:length(size5000data))){
binstartingvals5000 <- append(binstartingvals5000, binstartingvals5000[i-1]*2)
}
binnames5000 <- c()
for (i in (1:length(size5000data))){
binnames5000 <- append(binnames5000, paste(binstartingvals5000[i], "≤ x <", 2*binstartingvals5000[i]))
}
# plot the graphs
# initialise multi panelled plot
par(mfcol=c(2,2))
# plot size 500 first
par(mfg=c(1,1))
barplot(size500data, names.arg = binnames500, ylim=c(0,(1.1*(max(size500data)))), main= "Mean Species Abundance Distribution for Community Size 500", xlab = "Species Abundance (Individuals per species)", ylab = "Frequency (number of species)")
# plot size 1000
par(mfg=c(1,2))
barplot(size1000data, names.arg = binnames1000, ylim=c(0,(1.1*(max(size1000data)))), main= "Mean Species Abundance Distribution for Community Size 1000", xlab = "Species Abundance (Individuals per species)", ylab = "Frequency (number of species)")
# plot size 2500
par(mfg=c(2,1))
barplot(size2500data, names.arg = binnames2500, ylim=c(0,(1.1*(max(size2500data)))), main= "Mean Species Abundance Distribution for Community Size 2500", xlab = "Species Abundance (Individuals per species)", ylab = "Frequency (number of species)")
# plot size 5000
par(mfg=c(2,2))
barplot(size5000data, names.arg = binnames5000, ylim=c(0,(1.1*(max(size5000data)))), main= "Mean Species Abundance Distribution for Community Size 5000", xlab = "Species Abundance (Individuals per species)", ylab = "Frequency (number of species)")
return(combined_results)
}
plot_cluster_results()
plot_cluster_results <- function()  {
# clear any existing graphs and plot your graph within the R window
graphics.off()
# load combined_results from your rda file
load(file = "cluster_octave_results.rda")
size500data <- combined_results[[1]]
size1000data <- combined_results[[2]]
size2500data <- combined_results[[3]]
size5000data <- combined_results[[4]]
# assemble the data
# determine bin names
binstartingvals500 <- c(1)
for (i in (2:length(size500data))){
binstartingvals500 <- append(binstartingvals500, binstartingvals500[i-1]*2)
}
binnames500 <- c()
for (i in (1:length(size500data))){
binnames500 <- append(binnames500, paste(binstartingvals500[i], "≤ x <", 2*binstartingvals500[i]))
}
binstartingvals1000 <- c(1)
for (i in (2:length(size1000data))){
binstartingvals1000 <- append(binstartingvals1000, binstartingvals1000[i-1]*2)
}
binnames1000 <- c()
for (i in (1:length(size1000data))){
binnames1000 <- append(binnames1000, paste(binstartingvals1000[i], "≤ x <", 2*binstartingvals1000[i]))
}
binstartingvals2500 <- c(1)
for (i in (2:length(size2500data))){
binstartingvals2500 <- append(binstartingvals2500, binstartingvals2500[i-1]*2)
}
binnames2500 <- c()
for (i in (1:length(size2500data))){
binnames2500 <- append(binnames2500, paste(binstartingvals2500[i], "≤ x <", 2*binstartingvals2500[i]))
}
binstartingvals5000 <- c(1)
for (i in (2:length(size5000data))){
binstartingvals5000 <- append(binstartingvals5000, binstartingvals5000[i-1]*2)
}
binnames5000 <- c()
for (i in (1:length(size5000data))){
binnames5000 <- append(binnames5000, paste(binstartingvals5000[i], "≤ x <", 2*binstartingvals5000[i]))
}
# plot the graphs
# initialise multi panelled plot
par(mfcol=c(4,1))
# plot size 500 first
par(mfg=c(1,1))
barplot(size500data, names.arg = binnames500, ylim=c(0,(1.1*(max(size500data)))), main= "Mean Species Abundance Distribution for Community Size 500", xlab = "Species Abundance (Individuals per species)", ylab = "Frequency (number of species)")
# plot size 1000
par(mfg=c(2,1))
barplot(size1000data, names.arg = binnames1000, ylim=c(0,(1.1*(max(size1000data)))), main= "Mean Species Abundance Distribution for Community Size 1000", xlab = "Species Abundance (Individuals per species)", ylab = "Frequency (number of species)")
# plot size 2500
par(mfg=c(3,1))
barplot(size2500data, names.arg = binnames2500, ylim=c(0,(1.1*(max(size2500data)))), main= "Mean Species Abundance Distribution for Community Size 2500", xlab = "Species Abundance (Individuals per species)", ylab = "Frequency (number of species)")
# plot size 5000
par(mfg=c(4,1))
barplot(size5000data, names.arg = binnames5000, ylim=c(0,(1.1*(max(size5000data)))), main= "Mean Species Abundance Distribution for Community Size 5000", xlab = "Species Abundance (Individuals per species)", ylab = "Frequency (number of species)")
return(combined_results)
}
plot_cluster_results()
plot_cluster_results <- function()  {
# clear any existing graphs and plot your graph within the R window
graphics.off()
# load combined_results from your rda file
load(file = "cluster_octave_results.rda")
size500data <- combined_results[[1]]
size1000data <- combined_results[[2]]
size2500data <- combined_results[[3]]
size5000data <- combined_results[[4]]
# assemble the data
# determine bin names
binstartingvals500 <- c(1)
for (i in (2:length(size500data))){
binstartingvals500 <- append(binstartingvals500, binstartingvals500[i-1]*2)
}
binnames500 <- c()
for (i in (1:length(size500data))){
binnames500 <- append(binnames500, paste(binstartingvals500[i], "≤ x <", 2*binstartingvals500[i]))
}
binstartingvals1000 <- c(1)
for (i in (2:length(size1000data))){
binstartingvals1000 <- append(binstartingvals1000, binstartingvals1000[i-1]*2)
}
binnames1000 <- c()
for (i in (1:length(size1000data))){
binnames1000 <- append(binnames1000, paste(binstartingvals1000[i], "≤ x <", 2*binstartingvals1000[i]))
}
binstartingvals2500 <- c(1)
for (i in (2:length(size2500data))){
binstartingvals2500 <- append(binstartingvals2500, binstartingvals2500[i-1]*2)
}
binnames2500 <- c()
for (i in (1:length(size2500data))){
binnames2500 <- append(binnames2500, paste(binstartingvals2500[i], "≤ x <", 2*binstartingvals2500[i]))
}
binstartingvals5000 <- c(1)
for (i in (2:length(size5000data))){
binstartingvals5000 <- append(binstartingvals5000, binstartingvals5000[i-1]*2)
}
binnames5000 <- c()
for (i in (1:length(size5000data))){
binnames5000 <- append(binnames5000, paste(binstartingvals5000[i], "≤ x <", 2*binstartingvals5000[i]))
}
# plot the graphs
# initialise multi panelled plot
par(mfcol=c(2,2))
# plot size 500 first
par(mfg=c(1,1))
barplot(size500data, names.arg = binnames500, ylim=c(0,(1.1*(max(size500data)))), main= "Mean Species Abundance Distribution for Community Size 500", xlab = "Species Abundance (Individuals per species)", ylab = "Frequency (number of species)")
# plot size 1000
par(mfg=c(1,2))
barplot(size1000data, names.arg = binnames1000, ylim=c(0,(1.1*(max(size1000data)))), main= "Mean Species Abundance Distribution for Community Size 1000", xlab = "Species Abundance (Individuals per species)", ylab = "Frequency (number of species)")
# plot size 2500
par(mfg=c(2,1))
barplot(size2500data, names.arg = binnames2500, ylim=c(0,(1.1*(max(size2500data)))), main= "Mean Species Abundance Distribution for Community Size 2500", xlab = "Species Abundance (Individuals per species)", ylab = "Frequency (number of species)")
# plot size 5000
par(mfg=c(2,2))
barplot(size5000data, names.arg = binnames5000, ylim=c(0,(1.1*(max(size5000data)))), main= "Mean Species Abundance Distribution for Community Size 5000", xlab = "Species Abundance (Individuals per species)", ylab = "Frequency (number of species)")
return(combined_results)
}
plot_cluster_results()
