mapdata <- left_join(mapdata, resultsDFmapping, by='country') # join the data frames
pdf(file="../../Images/ClimateSensitivityMap.pdf")
# base plot
map <- ggplot(mapdata, aes(x = long, y = lat, group = group)) +
geom_polygon(aes(fill= corr), colour = "black")
# add colours
map <- map + scale_fill_gradient2(name="Sensitivity Score", midpoint = 0, mid = "white", high = "darkgoldenrod2", low = "blue4", limits = c(-0.25, 0.1), space="Lab") # maybe would be better to make all countries below zero on a different colour gradient
# Remove axis titles and details
map <- map + theme(axis.text.x=element_blank(),
axis.ticks.x=element_blank(),
axis.text.y=element_blank(),
axis.ticks.y=element_blank(),
axis.title.y = element_blank(),
axis.title.x = element_blank())
map <- map + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), legend.position = c(0.1, 0.25))
map
dev.off()
ggplot(data = resultsDF, mapping = aes(y=corr, x=continent, xlab = "Continent", ylab = "Sensitivity Score")) +
geom_point() + #plot sensitivity score against continent (Scatter)
ylab("Sensitivity Score")
pdf(file="../../Images/ClimateSensitivityBoxplot.pdf")
boxplot(corr ~ continent, data=resultsDF,  xlab = "Continent", ylab = "Sensitivity Score") # plot sensitivity score against continent (boxplot)
dev.off()
###################################
## model continental differences ##
###################################
mean(resultsDF$corr)
# pivot BD dataframe longer
countryBD <- pivot_longer(countryBD, -c(Country), values_to = "Biodiversity", names_to = "Year")
countryClimate <- pivot_longer(countryClimate, -c(Country), values_to = "Climate", names_to = "Year")
# merge data frames into one
alldata <- merge(countryClimate, countryBD, by=c("Country", "Year"))
# investigate surprising outliers
Oceaniasubset <- subset(resultsDF, resultsDF$continent == "Oceania")
View(Oceaniasubset)
Oceanianoutlier <- as.character(row.names(Oceaniasubset[which(Oceaniasubset$corr == min(Oceaniasubset$corr)), ]))
outlierdata <- alldata[c(which(alldata$Country == Oceanianoutlier)), ]
View(outlierdata)
fijiplot <- plot(outlierdata$TaxonCount, outlierdata$Biodiversity) # looks normal
fijiplot <- plot(outlierdata$Climate, outlierdata$Biodiversity) # looks normal
fijiplot
plot(outlierdata$Climate, outlierdata$Biodiversity)
outlierdata$Biodiversity
outlierdata$Climate
plot(outlierdata$Climate, outlierdata$Biodiversity)
plot(outlierdata$Climate, outlierdata$Biodiversity)
dev.off()
fijiplot <- plot(outlierdata$Climate, outlierdata$Biodiversity) # looks normal
source("~/CMEECoursework/Project/Code/ModellingScripts/ClimateModel.R", echo=TRUE)
View(Oceaniasubset)
min(Oceaniasubset$corr)
source("~/CMEECoursework/Project/Code/ModellingScripts/LandUseModel.R", echo=TRUE)
boxplot(corr ~ continent, data=resultsDF,  xlab = "Continent", ylab = "Sensitivity Score") # plot sensitivity score against continent (boxplot)
boxplot(corr ~ continent, data=resultsDF,  xlab = "Continent", ylab = "Sensitivity Score") # plot sensitivity score against continent (boxplot)
dev.off()
boxplot(corr ~ continent, data=resultsDF,  xlab = "Continent", ylab = "Sensitivity Score") # plot sensitivity score against continent (boxplot)
source("~/CMEECoursework/Project/Code/ModellingScripts/LandUseModel.R", echo=TRUE)
# investigate surprising outliers
Europesubset <- subset(resultsDF, resultsDF$continent == "Europe")
Europeanoutlier <- as.character(Europesubset[which(Europesubset$corr == max(Europesubset$corr)), "Country"])
View(Europesubset)
Europeanoutlier <- as.character(Europesubset[which(Europesubset$corr == max(Europesubset$corr)), "country"])
outlierdata <- alldata[c(which(alldata$Country == Europeanoutlier)), ]
View(countryBD)
View(countryBuilt)
# pivot BD dataframe longer
countryBD <- pivot_longer(countryBD, -c(country), values_to = "Biodiversity", names_to = "Year")
View(countryBD)
# pivot BD dataframe longer
countryBD <- pivot_longer(countryBD, -c(Country), values_to = "Biodiversity", names_to = "Year")
countryBuilt <- pivot_longer(countryBuilt, -c(Country), values_to = "Built", names_to = "Year")
# merge data frames into one
alldata <- merge(countryBuilt, countryBD, by=c("Country", "Year"))
View(alldata)
# investigate surprising outliers
Europesubset <- subset(resultsDF, resultsDF$continent == "Europe")
Europeanoutlier <- as.character(Europesubset[which(Europesubset$corr == max(Europesubset$corr)), "country"])
outlierdata <- alldata[c(which(alldata$Country == Europeanoutlier)), ]
irelandplot <- plot(outlierdata$TaxonCount, outlierdata$Biodiversity) # looks normal
irelandplot <- plot(outlierdata$Built, outlierdata$Biodiversity) # looks normal
max(Europesubset$corr)
source("~/CMEECoursework/Project/Code/ModellingScripts/InvasiveSpeciesModel.R", echo=TRUE)
source("~/CMEECoursework/Project/Code/ModellingScripts/ClimateModel.R", echo=TRUE)
source("~/CMEECoursework/Project/Code/ModellingScripts/LandUseModel.R", echo=TRUE)
source("~/CMEECoursework/Project/Code/ModellingScripts/PollutionModel.R", echo=TRUE)
source("~/CMEECoursework/Project/Code/ModellingScripts/PollutionModel.R", echo=TRUE)
source("~/CMEECoursework/Project/Code/ModellingScripts/LandUseModel.R", echo=TRUE)
# remove the outlier of Ireland
resultsDF <- subset(resultsDF, country = "Ireland")
View(resultsDF)
# investigate surprising outliers
Europesubset <- subset(resultsDF, resultsDF$continent == "Europe")
View(Europesubset)
source("~/CMEECoursework/Project/Code/ModellingScripts/LandUseModel.R", echo=TRUE)
View(resultsDF)
r
# remove the outlier of Ireland
resultsDF <- subset(resultsDF, country != "Ireland")
sensitivitymodel <- lm(resultsDF$corr ~ resultsDF$continent, weights = 1/(resultsDF$se))
summary(sensitivitymodel)
# remove countries with SE of 0
resultsDF <- subset(resultsDF, se != 0)
# make reference category the most numerous one
abundancetable <- table(resultsDF$continent)
resultsDF$continent <- relevel(factor(resultsDF$continent), ref = "Africa")
sensitivitymodel <- lm(resultsDF$corr ~ resultsDF$continent, weights = 1/(resultsDF$se))
summary(sensitivitymodel)
source("~/CMEECoursework/Project/Code/ModellingScripts/LandUseModel.R", echo=TRUE)
View(resultsDF)
source("~/CMEECoursework/Project/Code/ModellingScripts/LandUseModel.R", echo=TRUE)
View(resultsDF)
boxplot(corr ~ continent, data=resultsDF,  xlab = "Continent", ylab = "Sensitivity Score") # plot sensitivity score against continent (boxplot)
rm(list=ls())
library(plotrix) # for std.error
library(graphics) # for boxplot
library(grDevices) # for pdf and dev.off
library(rnaturalearth) # for ne_countries
library(stats) # for lm
library(ggplot2) # for many plotting functions
library(countrycode) # for countrycode
library(dplyr) # for left_join
countryBD <- readRDS("../../Data/BiodiversityData/WrangledBiodiversityData.RDS")
countryBuilt <- readRDS("../../Data/LandUseData/WrangledLandUseData.RDS")
#match years of data
countryBD <- countryBD[c(intersect(colnames(countryBD), colnames(countryBuilt)))]
countryBuilt <- countryBuilt[(c(intersect(colnames(countryBD), colnames(countryBuilt))))]
# remove rows with NAs
countryBD <- na.omit(countryBD)
countryBuilt <- na.omit(countryBuilt)
# make sure a country is only included in either table if it is present in both
matchingcountrys <- intersect(countryBD$Country, countryBuilt$Country)
countryBD <- countryBD[countryBD$Country %in% matchingcountrys, ]
countryBuilt <- countryBuilt[countryBuilt$Country %in% matchingcountrys, ]
#create results data frame
resultsDF <- data.frame(matchingcountrys)
# adjust column name
colnames(resultsDF)[1] <- "country"
#make the countrys the row names
resultsDF$corr <- NA
resultsDF$se <- NA
# loop through countrys and find significant correlation coefficients
for (country in seq_along(matchingcountrys)){
BDvalues <- as.numeric(as.vector(countryBD[country,]))
Builtvalues <- as.numeric(as.vector(countryBuilt[country,]))
# fit model
model <- (lm(BDvalues~Builtvalues))
#add correlation result to results data frame
resultsDF$corr[country] <- as.numeric(model[[1]][2])
resultsDF$se[country] <- as.numeric(sqrt(diag(vcov(model)))[2])
}
#add in continents and regions
resultsDF$continent <- countrycode(sourcevar = resultsDF$country,
origin = "country.name",
destination = "continent")
resultsDF$region <- countrycode(sourcevar = resultsDF$country,
origin = "country.name",
destination = "region")
#add in continents and regions
resultsDF$continent <- countrycode(sourcevar = resultsDF$country,
origin = "country.name",
destination = "continent")
resultsDF$region <- countrycode(sourcevar = resultsDF$country,
origin = "country.name",
destination = "region")
# add western sahara to north africa
resultsDF[172, "region"] <- "Middle East & North Africa"
for (row in 1:nrow(resultsDF)){
if (resultsDF[row, "region"]=='Latin America & Caribbean'){
resultsDF[row, 4] <- 'S. America'
}
}
resultsDF$continent <- replace(resultsDF$continent, resultsDF$continent=='Americas', 'N. America')
for (row in 1:nrow(resultsDF)){
if (resultsDF[row, "region"]=='North America'){
resultsDF[row, 4] <- 'N. America'
}
}
mean(resultsDF$corr)
std.error(resultsDF$corr)
range(resultsDF$corr)
theme_set(theme_bw())
world <- ne_countries(scale = "medium", returnclass = "sf")
mapdata <- map_data("world")
names(mapdata)[names(mapdata) == 'region'] <- 'country' # change the name of the countries column to match the other DF
mapdata <- left_join(mapdata, resultsDF, by='country') # join the data frames
pdf(file="../../Images/LandUseSensitivityMap.pdf")
# base plot
map <- ggplot(mapdata, aes(x = long, y = lat, group = group)) +
geom_polygon(aes(fill= corr), colour = "black")
# add colours
map <- map + scale_fill_gradient2(name="Sensitivity Score", midpoint = 0, mid = "white", high = "darkgoldenrod2", low = "blue4", limits = c(-3.222472, 2.756498), space="Lab") # maybe would be better to make all countries below zero on a different colour gradient
# Remove axis titles and details
map <- map + theme(axis.text.x=element_blank(),
axis.ticks.x=element_blank(),
axis.text.y=element_blank(),
axis.ticks.y=element_blank(),
axis.title.y = element_blank(),
axis.title.x = element_blank())
map <- map + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), legend.position = c(0.1, 0.25))
map
dev.off()
ggplot(data = resultsDF, mapping = aes(y=corr, x=continent, xlab = "Continent", ylab = "Sensitivity Score")) +
geom_point() + #plot sensitivity score against continent (Scatter)
ylab("Sensitivity Score")
pdf(file="../../Images/LandUseSensitivityBoxplot.pdf")
boxplot(corr ~ continent, data=resultsDF,  xlab = "Continent", ylab = "Sensitivity Score") # plot sensitivity score against continent (boxplot)
dev.off()
###################################
## model continental differences ##
###################################
mean(resultsDF$corr)
# pivot BD dataframe longer
countryBD <- pivot_longer(countryBD, -c(Country), values_to = "Biodiversity", names_to = "Year")
countryBuilt <- pivot_longer(countryBuilt, -c(Country), values_to = "Built", names_to = "Year")
# merge data frames into one
alldata <- merge(countryBuilt, countryBD, by=c("Country", "Year"))
# investigate surprising outliers
Europesubset <- subset(resultsDF, resultsDF$continent == "Europe")
Europeanoutlier <- as.character(Europesubset[which(Europesubset$corr == max(Europesubset$corr)), "country"])
outlierdata <- alldata[c(which(alldata$Country == Europeanoutlier)), ]
irelandplot <- plot(outlierdata$Built, outlierdata$Biodiversity) # looks normal
# remove countries with SE of 0
resultsDF <- subset(resultsDF, se != 0)
View(resultsDF)
# make reference category the most numerous one
abundancetable <- table(resultsDF$continent)
resultsDF$continent <- relevel(factor(resultsDF$continent), ref = "Africa")
sensitivitymodel <- lm(resultsDF$corr ~ resultsDF$continent, weights = 1/(resultsDF$se))
summary(sensitivitymodel)
# remove the outlier of Ireland
resultsDF <- subset(resultsDF, country != "Ireland")
# remove countries with SE of 0
resultsDF <- subset(resultsDF, se != 0)
# make reference category the most numerous one
abundancetable <- table(resultsDF$continent)
resultsDF$continent <- relevel(factor(resultsDF$continent), ref = "Africa")
sensitivitymodel <- lm(resultsDF$corr ~ resultsDF$continent, weights = 1/(resultsDF$se))
summary(sensitivitymodel)
source("~/CMEECoursework/Project/Code/ModellingScripts/LandUseModel.R", echo=TRUE)
source("~/CMEECoursework/Project/Code/ModellingScripts/LandUseModel.R", echo=TRUE)
# investigate surprising outliers
SAmericasubset <- subset(resultsDF, resultsDF$continent == "S. America")
View(SAmericasubset)
SAmericanoutlier <- as.character(SAmericasubset[which(SAmericasubset$corr == max(SAmericasubset$corr)), "country"])
SAmericanoutlier <- as.character(SAmericasubset[which(SAmericasubset$corr == min(SAmericasubset$corr)), "country"])
outlierdata <- alldata[c(which(alldata$Country == SAmericanoutlier)), ]
View(outlierdata)
irelandplot <- plot(outlierdata$Built, outlierdata$Biodiversity) # looks normal
hondurasplot <- plot(outlierdata$Built, outlierdata$Biodiversity) # looks normal
hondurasplot
hondurasplot <- plot(outlierdata$Built, outlierdata$Biodiversity) # looks normal
hondurasplot <- plot(outlierdata$Built, outlierdata$Biodiversity) # looks normal
hondurasplot
dev.off()
hondurasplot <- plot(outlierdata$Built, outlierdata$Biodiversity) # looks normal
View(resultsDF)
# remove the outlier of Honduras
resultsDF <- subset(resultsDF, country != "Honduras")
# make reference category the most numerous one
abundancetable <- table(resultsDF$continent)
resultsDF$continent <- relevel(factor(resultsDF$continent), ref = "Africa")
sensitivitymodel <- lm(resultsDF$corr ~ resultsDF$continent, weights = 1/(resultsDF$se))
summary(sensitivitymodel)
# investigate surprising outliers
Oceaniasubset <- subset(resultsDF, resultsDF$continent == "Oceania")
View(Oceaniasubset)
Oceanianoutlier <- as.character(Oceaniasubset[which(Oceaniasubset$corr == min(Oceaniasubset$corr)), "country"])
outlierdata <- alldata[c(which(alldata$Country == Oceanianoutlier)), ]
fijiplot <- plot(outlierdata$Built, outlierdata$Biodiversity) # looks normal
boxplot(corr ~ continent, data=resultsDF,  xlab = "Continent", ylab = "Sensitivity Score") # plot sensitivity score against continent (boxplot)
resultsDF <- subset(resultsDF, country != "Fiji")
boxplot(corr ~ continent, data=resultsDF,  xlab = "Continent", ylab = "Sensitivity Score") # plot sensitivity score against continent (boxplot)
dev.off()
boxplot(corr ~ continent, data=resultsDF,  xlab = "Continent", ylab = "Sensitivity Score") # plot sensitivity score against continent (boxplot)
View(resultsDF)
source("~/CMEECoursework/Project/Code/ModellingScripts/LandUseModel.R", echo=TRUE)
View(Oceaniasubset)
# investigate surprising outliers
Oceaniasubset <- subset(resultsDF, resultsDF$continent == "Oceania")
Oceanianoutlier <- as.character(Oceaniasubset[which(Oceaniasubset$corr == max(Oceaniasubset$corr)), "country"])
# remove outlier
resultsDF <- subset(resultsDF, country != "Samoa")
boxplot(corr ~ continent, data=resultsDF,  xlab = "Continent", ylab = "Sensitivity Score") # plot sensitivity score against continent (boxplot)
source("~/CMEECoursework/Project/Code/ModellingScripts/LandUseModel.R", echo=TRUE)
source("~/CMEECoursework/Project/Code/ModellingScripts/LandUseModel.R", echo=TRUE)
mean(resultsDF$corr)
std.error(resultsDF$corr)
std.error(resultsDF$corr)
range(resultsDF$corr)
source("~/CMEECoursework/Project/Code/ModellingScripts/InvasiveSpeciesModel.R", echo=TRUE)
rm(list=ls())
library(tidyr) # for pivot_longer
library(dplyr) # for left_join
library(countrycode) # for countrycode
library(plotrix) # for std.error
library(graphics) # for boxplot
library(grDevices) # for pdf
library(stats) # for lm
library(ggplot2) # for various plotting commands
library(rnaturalearth) # for ne_countries
library(tibble) # for rownames_To_column
#read in BD and Invasive data
countryBD <- readRDS("../../Data/BiodiversityData/WrangledBiodiversityData.RDS")
countryInvasive <- readRDS("../../Data/InvasiveSpeciesData/WrangledInvasiveSpeciesData.RDS")
#match years of data
matchedyears <- c(intersect(colnames(countryBD), countryInvasive$FirstRecord))
countryInvasive <- subset(countryInvasive, FirstRecord %in% matchedyears)
# remove rows with NAs (might be pointless because i changed the way i match years in this script)
countryBD <- na.omit(countryBD)
countryInvasive <- na.omit(countryInvasive)
# make sure a country is only included in either table if it is present in both
matchingcountrys <- intersect(countryBD$Country, countryInvasive$Country)
countryBD <- countryBD[countryBD$Country %in% matchingcountrys, ]
countryInvasive <- subset(countryInvasive, Country %in% matchingcountrys)
# check countrys matched and above method worked
levels(as.factor(countryInvasive$Country))==countryBD$Country
##################################
## PREPARE AND MERGE DATAFRAMES ##
##################################
#create results data frame
resultsDF <- data.frame(matchingcountrys)
colnames(resultsDF)[1] <- "Country"
resultsDF$corr <- NA
resultsDF$se <- NA
# pivot BD dataframe longer
countryBD <- pivot_longer(countryBD, -c(Country), values_to = "Biodiversity", names_to = "Year")
colnames(countryInvasive)[2] <- "Year"
# merge data frames into one
alldata <- merge(countryInvasive, countryBD, by=c("Country", "Year"))
###############################
## OBTAIN SENSITIVITY SCORES ##
###############################
# loop through countrys and find significant correlation coefficients
for (countryloop in seq_along(matchingcountrys)){ # this for loop is absolutely fucked and doesn't work
# make subset of dataframe containing only entries from that country
onecountry <- alldata %>% dplyr::filter(Country == matchingcountrys[countryloop])
if (length(levels(as.factor(onecountry$TaxonCount)))>1) {
# fit model
model <- (lm(onecountry$Biodiversity~onecountry$TaxonCount))
#add correlation result to results data frame
resultsDF$corr[countryloop] <- as.numeric(model[[1]][2])
resultsDF$se[countryloop] <- as.numeric(sqrt(diag(vcov(model)))[2])
}
}
#remove NAs
resultsDF <- na.omit(resultsDF)
## remove countries with SE of 0
resultsDF <- subset(resultsDF, se != 0)
# get continents and region
resultsDF$continent <- countrycode(sourcevar = resultsDF$Country,
origin = "country.name",
destination = "continent")
resultsDF$region <- countrycode(sourcevar = resultsDF$Country,
origin = "country.name",
destination = "region")
# this adds north and south america as 'the americas' so i must separate:
for (row in 1:nrow(resultsDF)){
if (resultsDF[row, 4]=='Latin America & Caribbean'){
resultsDF[row, 3] <- 'S. America'
}
}
resultsDF$continent <- replace(resultsDF$continent, resultsDF$continent=='Americas', 'N. America')
for (row in 1:nrow(resultsDF)){
if (resultsDF[row, 4]=='North America'){
resultsDF[row, 3] <- 'N. America'
}
}
mean(resultsDF$corr)
std.error(resultsDF$corr)
range(resultsDF$corr)
##################################
## VISUALISE SENSITIVITY SCORES ##
##################################
theme_set(theme_bw())
world <- ne_countries(scale = "medium", returnclass = "sf")
mapdata <- map_data("world")
names(mapdata)[names(mapdata) == 'region'] <- 'Country' # change the name of the countries column to match the other DF
mapdata <- left_join(mapdata, resultsDF, by='Country') # join the data frames
pdf(file="../../Images/InvasiveSpeciesSensitivityMap.pdf")
map <- ggplot(mapdata, aes(x = long, y = lat, group = group)) +
geom_polygon(aes(fill= corr), colour = "black")
map <- map + scale_fill_gradient2(name="Sensitivity Score", midpoint = 0, mid = "white", high = "darkgoldenrod2", low = "blue4", limits = c(-0.02300198, 0.05477224), space="Lab") # maybe would be better to make all countries below zero on a different colour gradient
# Remove axis titles and details
map <- map + theme(axis.text.x=element_blank(),
axis.ticks.x=element_blank(),
axis.text.y=element_blank(),
axis.ticks.y=element_blank(),
axis.title.y = element_blank(),
axis.title.x = element_blank())
map <- map + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), legend.position = c(0.1, 0.25))
map
dev.off()
ggplot(data = resultsDF, mapping = aes(y=corr, x=continent)) +
geom_point() # plot sensitivity score against continent (Scatter)
pdf(file="../../Images/InvasiveSpeciesSensitivityBoxplot.pdf")
boxplot(corr ~ continent, data=resultsDF) # plot sensitivity score against continent (boxplot)
dev.off()
# investigate surprising outliers
Europesubset <- subset(resultsDF, resultsDF$continent == "Europe")
Europeanoutlier <- as.character(Europesubset[which(Europesubset$corr == max(Europesubset$corr)), "Country"])
outlierdata <- alldata[c(which(alldata$Country == Europeanoutlier)), ]
bosniaplot <- plot(outlierdata$TaxonCount, outlierdata$Biodiversity) # looks normal
View(Europesubset)
# investigate surprising outliers
Africasubset <- subset(resultsDF, resultsDF$continent == "Africa")
Africanoutlier <- as.character(Africasubset[which(Africasubset$corr == max(Africasubset$corr)), "Country"])
outlierdata <- alldata[c(which(alldata$Country == Africanoutlier)), ]
malawiplot <- plot(outlierdata$TaxonCount, outlierdata$Biodiversity) # looks normal
View(Africasubset)
source("~/CMEECoursework/Project/Code/ModellingScripts/InvasiveSpeciesModel.R", echo=TRUE)
source("~/CMEECoursework/Project/Code/ModellingScripts/ClimateModel.R", echo=TRUE)
boxplot(corr ~ continent, data=resultsDF,  xlab = "Continent", ylab = "Sensitivity Score") # plot sensitivity score against continent (boxplot)
# investigate surprising outliers
Oceaniasubset <- subset(resultsDF, resultsDF$continent == "Oceania")
Oceanianoutlier <- as.character(row.names(Oceaniasubset[which(Oceaniasubset$corr == min(Oceaniasubset$corr)), ]))
outlierdata <- alldata[c(which(alldata$Country == Oceanianoutlier)), ]
View(outlierdata)
View(Oceaniasubset)
source("~/CMEECoursework/Project/Code/ModellingScripts/PollutionModel.R", echo=TRUE)
boxplot(corr ~ continent, data=resultsDF,  xlab = "Continent", ylab = "Sensitivity Score") # plot sensitivity score against continent (boxplot)
abundancetable
source("~/CMEECoursework/Project/Code/ModellingScripts/PollutionModel.R", echo=TRUE)
# pivot BD dataframe longer
countryBD <- pivot_longer(countryBD, -c(Country), values_to = "Biodiversity", names_to = "Year")
countryGHG <- pivot_longer(countryGHG, -c(Country), values_to = "GHG", names_to = "Year")
# merge data frames into one
alldata <- merge(countryGHG, countryBD, by=c("Country", "Year"))
View(alldata)
# investigate surprising outliers
Europesubset <- subset(resultsDF, resultsDF$continent == "Europe")
Europeanoutlier <- as.character(Europesubset[which(Europesubset$corr == min(Europesubset$corr)), "country"])
View(Europesubset)
min(Europesubset$corr)
which(Europesubset$corr == min(Europesubset$corr))
Europesubset[which(Europesubset$corr == min(Europesubset$corr)), "country"]
Europesubset[1]
Europeanoutlier <- as.character(row.names(Europesubset[which(Europesubset$corr == min(Europesubset$corr)), ]))
outlierdata <- alldata[c(which(alldata$Country == Europeanoutlier)), ]
View(outlierdata)
irelandplot <- plot(outlierdata$Built, outlierdata$Biodiversity) # looks normal
spainplot <- plot(outlierdata$Built, outlierdata$Biodiversity) # looks normal
spainplot <- plot(outlierdata$GHG, outlierdata$Biodiversity) # looks normal
# remove the outlier of Ireland
resultsDF <- subset(resultsDF, country != "Ireland"
)
source("~/CMEECoursework/Project/Code/ModellingScripts/PollutionModel.R", echo=TRUE)
# remove the outlier of Ireland
resultsDF <- subset(resultsDF, country != "Spain")
source("~/CMEECoursework/Project/Code/ModellingScripts/PollutionModel.R", echo=TRUE)
library(tibble) # for rownames_to_column
rm(list=ls())
source("~/CMEECoursework/Project/Code/ModellingScripts/PollutionModel.R", echo=TRUE)
source("~/CMEECoursework/Project/Code/ModellingScripts/PollutionModel.R", echo=TRUE)
rm(list=ls())
library(tibble) # for rownames_to_column
library(tidyr) # for pivot_longer
library(countrycode) # for countrycode
library(ggplot2) # for various plotting commands
library(graphics) # for boxplot
library(grDevices) # for pdf
library(dplyr) # for left_join
library(rnaturalearth) # for ne_countries
library(stats) # for lm
#read in BD and GHG data
countryBD <- readRDS("../../Data/BiodiversityData/WrangledBiodiversityData.RDS")
countryGHG <- readRDS("../../Data/PollutionData/WrangledPollutionData.RDS")
#match years of data
countryBD <- countryBD[(c(intersect(colnames(countryBD), colnames(countryGHG))))]
countryGHG <- countryGHG[(c(intersect(colnames(countryBD), colnames(countryGHG))))]
# remove rows with NAs
countryBD <- na.omit(countryBD)
countryGHG <- na.omit(countryGHG)
# make sure a country is only included in either table if it is present in both
matchingcountrys <- intersect(countryBD$Country, countryGHG$Country)
countryBD <- countryBD[countryBD$Country %in% matchingcountrys, ]
countryGHG <- countryGHG[countryGHG$Country %in% matchingcountrys, ]
resultsDF <- data.frame(matchingcountrys)
#make the countrys the row names
row.names(resultsDF) <- matchingcountrys
resultsDF <- resultsDF[-1]
resultsDF$corr <- NA
resultsDF$se <- NA
for (country in seq_along(matchingcountrys)){
BDvalues <- as.numeric(as.vector(countryBD[country,]))
GHGvalues <- as.numeric(as.vector(countryGHG[country,]))
#myDF <- data.frame(colnames(countryBD), BD, GHG)
# fit model
model <- (lm(BDvalues~GHGvalues))
#add correlation result to results data frame
resultsDF$corr[country] <- as.numeric(model[[1]][2])
resultsDF$se[country] <- as.numeric(sqrt(diag(vcov(model)))[2])
}
View(resultsDF)
source("~/CMEECoursework/Project/Code/ModellingScripts/PollutionModel.R", echo=TRUE)
# remove the outlier of Spain
resultsDF <- subset(resultsDF, country != "Spain")
# remove the outlier of Spain
resultsDF <- tibble::rownames_to_column(resultsDF, "country")
resultsDF <- subset(resultsDF, country != "Spain")
boxplot(corr ~ continent, data=resultsDF,  xlab = "Continent", ylab = "Sensitivity Score") # plot sensitivity score against continent (boxplot)
View(Europesubset)
View(Europesubset)
# investigate surprising outliers
Europeanoutlier <- as.character(row.names(Europesubset[which(Europesubset$corr == max(Europesubset$corr)), ]))
outlierdata <- alldata[c(which(alldata$Country == Europeanoutlier)), ]
spainplot <- plot(outlierdata$GHG, outlierdata$Biodiversity) # looks normal
switzerlandplot <- plot(outlierdata$GHG, outlierdata$Biodiversity) # looks normal
resultsDF <- subset(resultsDF, country != "Switzerland")
boxplot(corr ~ continent, data=resultsDF,  xlab = "Continent", ylab = "Sensitivity Score") # plot sensitivity score against continent (boxplot)
mean(resultsDF$corr)
std.error(resultsDF$corr)
range(resultsDF$corr)
